{"version":3,"sources":["mole.svg","reset.svg","notification.mp3","services/firestore.js","config.js","asset/volume-mute.svg","asset/volume-medium.svg","App.js","reportWebVitals.js","index.js"],"names":["process","REACT_APP_FIREBASE_API_KEY","REACT_APP_FIREBASE_AUTH_DOMAIN","REACT_APP_FIREBASE_PROJECT_ID","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","addLeaderBoard","name","score","collection","add","created","FieldValue","serverTimestamp","user","ReactGA","initialize","App","countdowntimerId","useState","sound","setSound","loader","setLoader","loaderMessage","setLoaderMessage","leaderscreen","setLeaderscreen","leaderboard","soundStatus","setSoundStatus","setScore","timer","setTimer","moleNumber","setMoleNumber","initial","setInitial","resetScreen","showResult","setShowResult","countDown","randomGenerator","moleAtPosition","Math","ceil","random","a","firebaseService","data","useEffect","pageview","window","location","pathname","console","log","document","getElementById","innerHTML","id","setInterval","clearInterval","addLeaderboardFn","highScore","JSON","parse","localStorage","getItem","setItem","event","category","action","label","setTimeout","className","url","successSound","ignoreMobileRestrictions","playStatus","Sound","status","PLAYING","STOPPED","onFinishedPlaying","src","medium","onClick","mute","classNam","reset","e","tabIndex","mole","preventDefault","length","map","record","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8a59e7e5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mole.31f04b16.svg\";","export default __webpack_public_path__ + \"static/media/reset.c58ca91c.svg\";","export default __webpack_public_path__ + \"static/media/notification.28362141.mp3\";","import firebase from \"firebase/app\"\nimport \"firebase/firestore\"\nimport { config } from \"../config\"\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n}\n\nfirebase.initializeApp(config)\nconst db = firebase.firestore()\n\n// export const authenticateAnonymously = () => {\n//   return firebase.auth().signInAnonymously()\n// }\n\nexport const addLeaderBoard = (name, score) => {\n  return db.collection(\"leaderBoard\").add({\n    created: firebase.firestore.FieldValue.serverTimestamp(),\n    user: name,\n    score: score,\n  })\n}\n\n// export const getLeaderboard = async () => {\n//   try {\n//     let leaderboard = []\n//     var boardRef = db.collection(\"leaderBoard\")\n//     let allleadersSnapShot = await boardRef.get()\n//     allleadersSnapShot.forEach((doc) => {\n//       let currentDoc = doc.data()\n//       leaderboard.push({ user: currentDoc.user, score: currentDoc.score })\n//     })\n//     leaderboard = leaderboard.sort((a, b) => b.score - a.score)\n//     const top5 = leaderboard.splice(0, 5)\n\n//     return top5\n//   } catch (err) {\n//     console.log(\"Error getting documents\", err)\n//   }\n// }\n\nexport const getLeaderboard = async () => {\n  try {\n    let leaderboard = []\n    var boardRef = db.collection(\"leaderBoard\")\n\n    let allleadersSnapShot = await boardRef.orderBy(\"score\", \"desc\").get()\n    // let allleadersSnapShot = await boardRef.get()\n    allleadersSnapShot.forEach((doc) => {\n      let currentDoc = doc.data()\n      leaderboard.push({ user: currentDoc.user, score: currentDoc.score })\n    })\n\n    const users = []\n    const top5 = []\n    for (let i = 0; i < leaderboard.length; i++) {\n      if (!users.includes(leaderboard[i].user)) {\n        users.push(leaderboard[i].user)\n        top5.push({ user: leaderboard[i].user, score: leaderboard[i].score })\n      }\n      if (users.length === 5) {\n        break\n      }\n    }\n    return top5\n  } catch (err) {\n    console.log(\"Error getting documents\", err)\n  }\n}\n","export const config = {\n  apiKey: \"AIzaSyCBtKXm-wJKAhTzYALwAD2DN5bsRFX6MBc\",\n  authDomain: \"whackamole-979dc.firebaseapp.com\",\n  projectId: \"whackamole-979dc\",\n  storageBucket: \"whackamole-979dc.appspot.com\",\n  messagingSenderId: \"639561485134\",\n  appId: \"1:639561485134:web:796356e8bc94bb0e57ac1f\",\n  measurementId: \"G-E4M7TB1CN0\",\n}\n","export default __webpack_public_path__ + \"static/media/volume-mute.30b9c37a.svg\";","export default __webpack_public_path__ + \"static/media/volume-medium.e7e97738.svg\";","import { useState, useEffect } from \"react\"\nimport mole from \"./mole.svg\"\nimport reset from \"./reset.svg\"\nimport Sound from \"react-sound\"\nimport successSound from \"./notification.mp3\"\nimport ReactGA from \"react-ga\"\nimport config from \"./config\"\nimport * as firebaseService from \"./services/firestore\"\nimport mute from \"./asset/volume-mute.svg\"\nimport medium from \"./asset/volume-medium.svg\"\n\nReactGA.initialize(\"UA-198335802-1\")\n\nfunction App() {\n  const COUNTDOWN_TIMER = 30\n  const RESET_TIMER = 3000\n  const [sound, setSound] = useState(true)\n  const [loader, setLoader] = useState(false)\n  const [loaderMessage, setLoaderMessage] = useState(\"\")\n  const [leaderscreen, setLeaderscreen] = useState(false)\n  const [leaderboard, setLeaderboard] = useState([])\n  const [soundStatus, setSoundStatus] = useState(false)\n  const [score, setScore] = useState(0)\n  const [timer, setTimer] = useState(COUNTDOWN_TIMER)\n  const [resetTimer, setResetTimer] = useState(RESET_TIMER)\n  const [moleNumber, setMoleNumber] = useState()\n  const [initial, setInitial] = useState(true)\n  const [resetScreen, setResetScreen] = useState(false)\n  const [showResult, setShowResult] = useState(false)\n  const [name, setName] = useState(\"\")\n  function countDown() {\n    setTimer(timer - 1)\n  }\n\n  let countdowntimerId\n\n  function showDynamicInterstitial() {\n    console.log(\"Executing\");\n    document.getElementById(\"websdk\").innerHTML = `<ins class=\"adsbyvmax\" id=\"p_interstitial\" data-adspot-key=\"2eca23dc\" data-pkg-name=\"com.aadeshk.wammyjio\"></ins>`;\n  };\n\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname)\n    showDynamicInterstitial();\n  }, [])\n\n  function randomGenerator() {\n    if (timer > 0) {\n      const moleAtPosition = Math.ceil(Math.random() * 9)\n      setMoleNumber(moleAtPosition)\n    }\n  }\n  async function addLeaderboardFn(name, score) {\n    const data = await firebaseService.addLeaderBoard(name, score)\n    return data\n  }\n\n  async function getLeaderboardFn() {\n    const data = await firebaseService.getLeaderboard()\n    console.log(data)\n    setLeaderboard(data)\n  }\n\n  useEffect(() => {\n    if (score != 0) {\n      setSoundStatus(true)\n      \n    }\n  }, [score])\n  useEffect(() => {\n    if (timer > 0) {\n      const id = setInterval(randomGenerator, 500)\n      return () => clearInterval(id)\n    }\n  }, [timer])\n\n  useEffect(() => {\n    if (timer > 0) {\n      countdowntimerId = setInterval(countDown, 1000)\n      return () => clearInterval(countdowntimerId)\n    }\n    if (timer === 0) {\n      setTimer(-1)\n      const res = addLeaderboardFn(name, score)\n\n      const highScore = JSON.parse(localStorage.getItem(\"highScore\"))\n      if (score > highScore) {\n        localStorage.setItem(\"highScore\", score)\n      }\n      ReactGA.event({\n        category: \"score\",\n        action: name,\n        label: score,\n      })\n      setLoader(true)\n      setLoaderMessage(\"Loading results...\")\n      setTimeout(() => {\n        setLoader(false)\n        setLoaderMessage(\"\")\n        setShowResult(true)\n      }, 3000)\n    }\n  }, [timer])\n\n  const resetHandler = (e) => {\n    setTimer(-1)\n    setLoader(true)\n    setLoaderMessage(\"Get Ready to Whack\")\n    setTimeout(() => {\n      setLoader(false)\n      setLoaderMessage(\"\")\n      setTimer(COUNTDOWN_TIMER)\n      setScore(0)\n      randomGenerator()\n    }, 3000)\n    ReactGA.event({\n      category: \"reset\",\n      action: \"reset clicked\",\n      label: name,\n    })\n  }\n\n  return (\n    <div className=\"relative flex flex-col items-center justify-center w-full h-full bg-emerald-600 bg-opacity-80 font-raleway\">\n      \n      {resetScreen && (\n        <div className=\"absolute inset-0 z-10 flex flex-col items-center justify-center w-full bg-gray-800 h-hull\">\n          <div className=\"absolute inset-0 z-10 flex flex-col items-center justify-center w-full bg-black h-hull animate-pulse\">\n            <h1 className=\"text-xl text-white animate-ping\">Get Ready</h1>\n          </div>\n        </div>\n      )}\n      <Sound\n        url={successSound}\n        ignoreMobileRestrictions={true}\n        playStatus={\n          sound && soundStatus ? Sound.status.PLAYING : Sound.status.STOPPED\n        }\n        onFinishedPlaying={() => {\n          setSoundStatus(false)\n        }}\n      />\n\n      <div className=\"absolute top-5 right-5\">\n        {sound && !leaderscreen ? (\n          <img\n            src={medium}\n            className=\"z-20 w-8 h-8 cursor-pointer\"\n            onClick={() => setSound(false)}\n          />\n        ) : (\n          <img\n            src={mute}\n            className=\"z-20 w-8 h-8 cursor-pointer\"\n            onClick={() => setSound(true)}\n          />\n        )}\n      </div>\n      <div className=\"absolute flex items-center justify-around w-8/12 top-5 lg:top-20\">\n        <h1 className=\"p-2 text-3xl text-gray-800\"> Whack-A-Mole</h1>\n      </div>\n      <div className=\"absolute z-40 w-56 h-56 top-15\" id=\"websdk\">\n\n      </div>\n      <h1 className=\"p-2 text-2xl font-light text-gray-800\">{name}</h1>\n\n      <div className=\"flex items-center justify-between w-10/12 mb-12 lg:w-3/12 lg:m-12\">\n        <div classNam=\"flex flex-col\">\n          <h1 className=\"p-1 text-xl font-light text-gray-800 lg:text-3xl\">\n            Score:\n          </h1>\n          <h1 className=\"p-2 pt-0 text-xl text-center text-gray-800 lg:text-3xl\">\n            {score}\n          </h1>\n        </div>\n        <img\n          src={reset}\n          className=\"w-10 h-10 rounded-full shadow-xl active:bg-opacity-50 lg:w-20 lg:h-20\"\n          onClick={(e) => {\n            resetHandler(e)\n          }}\n        />\n        <div classNam=\"flex flex-col\">\n          <h1 className=\"p-1 text-xl font-light text-gray-800 lg:text-3xl\">\n            Timer:{\" \"}\n          </h1>\n          <h1 className=\"p-2 pt-0 text-xl text-center text-gray-800 lg:text-3xl\">\n            {timer}\n          </h1>\n        </div>\n      </div>\n\n      <div className=\"flex flex-wrap p-2 mb-8 border-4 border-separate rounded-lg shadow-xl border-emerald-700 border-opacity-60 bg-emerald-700 bg-opacity-60 w-320 h-320\">\n        <div\n          tabIndex=\"1\"\n          className={`${\n            moleNumber === 1\n              ? \"bg-gradient-to-r from-gray-900 to-black\"\n              : \"bg-green-800\"\n          }  bg-opacity-90 h-100 w-100 m-0.5 shadow-inner hover:bg-green-900 cursor-pointer flex justify-center items-center  active:outline-none focus:outline-none focus-within:outline-none`}\n          // onFocus={() => console.log(\"Executed\")}\n          onClick={() => {\n            timer > 0 && moleNumber === 1 && setScore(score + 50)\n          }}\n        >\n          {moleNumber === 1 && (\n            <img src={mole} className=\"w-16 h-16 animate-wiggle\" />\n          )}\n        </div>\n        <div\n          className={`${\n            moleNumber === 2\n              ? \"bg-gradient-to-r from-gray-900 to-black\"\n              : \"bg-green-800\"\n          }  bg-opacity-90 h-100 w-100 m-0.5 shadow-inner hover:bg-green-900 cursor-pointer active:bg-green-700 flex justify-center items-center `}\n          onClick={() => {\n            timer > 0 && moleNumber === 2 && setScore(score + 50)\n          }}\n        >\n          {moleNumber === 2 && (\n            <img src={mole} className=\"w-16 h-16 animate-wiggle\" />\n          )}\n        </div>\n        <div\n          className={`${\n            moleNumber === 3\n              ? \"bg-gradient-to-r from-gray-900 to-black\"\n              : \"bg-green-800\"\n          } bg-opacity-90 h-100 w-100 m-0.5 shadow-inner hover:bg-green-900 cursor-pointer active:bg-green-700 flex justify-center items-center `}\n          onClick={() => {\n            timer > 0 && moleNumber === 3 && setScore(score + 50)\n          }}\n        >\n          {moleNumber === 3 && (\n            <img src={mole} className=\"w-16 h-16 animate-wiggle\" />\n          )}\n        </div>\n        <div\n          className={`${\n            moleNumber === 4\n              ? \"bg-gradient-to-r from-gray-900 to-black\"\n              : \"bg-green-800\"\n          } bg-opacity-90 h-100 w-100 m-0.5 shadow-inner hover:bg-green-900 cursor-pointer active:bg-green-700 flex justify-center items-center `}\n          onClick={() => {\n            timer > 0 && moleNumber === 4 && setScore(score + 50)\n          }}\n        >\n          {moleNumber === 4 && (\n            <img src={mole} className=\"w-16 h-16 animate-wiggle\" />\n          )}\n        </div>\n        <div\n          className={`${\n            moleNumber === 5\n              ? \"bg-gradient-to-r from-gray-900 to-black\"\n              : \"bg-green-800\"\n          } bg-opacity-90 h-100 w-100 m-0.5 shadow-inner hover:bg-green-900 cursor-pointer active:bg-green-700 flex justify-center items-center `}\n          onClick={() => {\n            timer > 0 && moleNumber === 5 && setScore(score + 50)\n          }}\n        >\n          {moleNumber === 5 && (\n            <img src={mole} className=\"w-16 h-16 animate-wiggle\" />\n          )}\n        </div>\n        <div\n          className={`${\n            moleNumber === 6\n              ? \"bg-gradient-to-r from-gray-900 to-black\"\n              : \"bg-green-800\"\n          } bg-opacity-90 h-100 w-100 m-0.5 shadow-inner hover:bg-green-900 cursor-pointer active:bg-green-700 flex justify-center items-center `}\n          onClick={() => {\n            timer > 0 && moleNumber === 6 && setScore(score + 50)\n          }}\n        >\n          {moleNumber === 6 && (\n            <img src={mole} className=\"w-16 h-16 animate-wiggle\" />\n          )}\n        </div>\n        <div\n          className={`${\n            moleNumber === 7\n              ? \"bg-gradient-to-r from-gray-900 to-black\"\n              : \"bg-green-800\"\n          } bg-opacity-90 h-100 w-100 m-0.5 shadow-inner hover:bg-green-900 cursor-pointer active:bg-green-700 flex justify-center items-center `}\n          onClick={() => {\n            timer > 0 && moleNumber === 7 && setScore(score + 50)\n          }}\n        >\n          {moleNumber === 7 && (\n            <img src={mole} className=\"w-16 h-16 animate-wiggle\" />\n          )}\n        </div>\n        <div\n          className={`${\n            moleNumber === 8\n              ? \"bg-gradient-to-r from-gray-900 to-black\"\n              : \"bg-green-800\"\n          } bg-opacity-90 h-100 w-100 m-0.5 shadow-inner hover:bg-green-900 cursor-pointer active:bg-green-700 flex justify-center items-center `}\n          onClick={() => {\n            timer > 0 && moleNumber === 8 && setScore(score + 50)\n          }}\n        >\n          {moleNumber === 8 && (\n            <img src={mole} className=\"w-16 h-16 animate-wiggle\" />\n          )}\n        </div>\n        <div\n          className={`${\n            moleNumber === 9\n              ? \"bg-gradient-to-r from-gray-900 to-black\"\n              : \"bg-green-800\"\n          } bg-opacity-90 h-100 w-100 m-0.5 shadow-inner hover:bg-green-900 cursor-pointer active:bg-green-700 flex justify-center items-center `}\n          onClick={() => {\n            timer > 0 && moleNumber === 9 && setScore(score + 50)\n          }}\n        >\n          {moleNumber === 9 && (\n            <img src={mole} className=\"w-16 h-16 animate-wiggle\" />\n          )}\n        </div>\n      </div>\n      {/* <h6\n        className=\"absolute py-2 text-sm font-semibold bottom-2 hover:opacity-50 animate-pulse\"\n        onClick={(e) => {\n          e.preventDefault()\n          ReactGA.event({\n            category: \"portfolio\",\n            action: \"Portfolio clicked\",\n            label: name,\n          })\n          window.location.href = \"https://aadeshkulkarni.me/\"\n        }}\n      >\n        Designed with <span className=\"text-red-900\">&hearts;</span> by Aadesh\n        Kulkarni\n      </h6> */}\n      {showResult && (\n        <div className=\"absolute inset-0 flex flex-col items-center justify-center w-full bg-black h-hull\">\n          <h2 className=\"p-2 text-3xl text-white\">Whack A Mole</h2>\n          <img src={mole} className=\"w-24 h-24 m-6\" />\n          {localStorage.getItem(\"highScore\") &&\n            localStorage.getItem(\"highScore\") !== \"\" && (\n              <h2 className=\"p-2 text-2xl text-white\">\n                Highest score: {localStorage.getItem(\"highScore\")}\n              </h2>\n            )}\n          <h2 className=\"p-2 text-2xl text-white\">Current score: {score}</h2>\n          {/* <button\n            onClick={() => {\n              getLeaderboardFn()\n              setLeaderscreen(true)\n              ReactGA.event({\n                category: \"leaderboard\",\n                action: \"leaderboard checked\",\n                label: name,\n              })\n            }}\n            className=\"w-8/12 p-4 m-2 text-xl bg-white border border-gray-800 rounded-lg shadow-lg focus:outline-none active:outline-none active:bg-gray-50 md:w-4/12\"\n          >\n            Leaderboard\n          </button> */}\n          <button\n            onClick={() => {\n              setTimer(COUNTDOWN_TIMER)\n              setScore(0)\n              randomGenerator()\n              setShowResult(false)\n              ReactGA.event({\n                category: \"play\",\n                action: \"Play again button clicked\",\n                label: name,\n              })\n            }}\n            className=\"w-8/12 p-4 m-2 text-xl bg-white bg-green-500 border border-gray-800 rounded-lg shadow-lg opacity-100 focus:outline-none active:outline-none active:bg-gray-50 md:w-4/12 \"\n          >\n            Play Again\n          </button>\n        </div>\n      )}\n      {initial && (\n        <div className=\"absolute inset-0 flex flex-col items-center justify-center w-full bg-black h-hull\">\n          <h2 className=\"p-2 text-3xl text-white\">Whack A Mole</h2>\n          <img src={mole} className=\"w-24 h-24 m-6\" />\n          <h3 className=\"p-2 text-xl text-white\">Rules:</h3>\n          <p className=\"w-7/12 p-3 text-base text-center text-white\">\n            Well, there are no rules! <br />\n            Just Whack the mole <br />\n            Whack it real bad!\n          </p>\n          {/* <input\n            autoFocus\n            type=\"text\"\n            placeholder=\"Enter player name\"\n            value={name}\n            maxLength=\"15\"\n            onChange={(e) => {\n              setName(e.target.value)\n            }}\n            className=\"w-8/12 h-16 p-4 pb-2 m-2 font-semibold text-center rounded-lg shadow-lg text-md focus-within:outline-none md:w-4/12 focus:ring-2 focus:ring-teal-600 focus:ring-opacity-50 focus:ring-inset\"\n          /> */}\n          <button\n            onClick={(event) => {\n              event.preventDefault()\n              setInitial(false)\n              setShowResult(false)\n              setTimer(COUNTDOWN_TIMER)\n              setScore(0)\n              randomGenerator()\n              ReactGA.event({\n                category: \"play\",\n                action: \"Play button clicked\",\n                label: name,\n              })\n            }}\n            className={`w-8/12 p-4 m-2 text-xl text-white  border border-gray-800 rounded-lg shadow-lg bg-opacity-90 focus:outline-none active:outline-none active:bg-gray-50 md:w-4/12 opacity-100 bg-green-500 animate-pulse\"\n            `}\n          >\n            Play\n          </button>\n        </div>\n      )}\n      {leaderscreen && (\n        <div className=\"absolute inset-0 flex flex-col items-center justify-center w-full bg-black h-hull\">\n          <span\n            className=\"absolute text-3xl text-white cursor-pointer top-8 right-8\"\n            onClick={() => setLeaderscreen(false)}\n          >\n            X\n          </span>\n          <h2 className=\"p-2 mb-4 text-3xl text-white\">Leaderboard</h2>\n\n          {leaderboard && leaderboard.length === 0 && (\n            <span className=\"text-lg text-white\">Loading data...</span>\n          )}\n          {leaderboard && leaderboard.length > 0 && (\n            <div className=\"grid w-10/12 grid-cols-5 p-2 text-lg bg-teal-600 bg-opacity-100 text-gray-50\">\n              <div className=\"col-span-1\"></div>\n              <div className=\"col-span-3\">Player</div>\n              <div className=\"col-span-1\">Score</div>\n            </div>\n          )}\n          {leaderboard &&\n            leaderboard.length > 0 &&\n            leaderboard.map((record, index) => (\n              <div className=\"grid w-10/12 grid-cols-5 p-2 text-lg text-gray-800 bg-white bg-opacity-100 border border-gray-100\">\n                <div className=\"col-span-1\">{index + 1}</div>\n                <div className=\"col-span-3\">{record.user}</div>\n                <div className=\"col-span-1\">{record.score}</div>\n              </div>\n            ))}\n        </div>\n      )}\n      {loader && (\n        <div className=\"absolute inset-0 flex flex-col items-center justify-center w-full h-hull animate-background\">\n          <h1 className=\"p-2 text-3xl text-white\">{loaderMessage}</h1>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}